{"version":3,"sources":["contexts/AdjacencyListContext.tsx","contexts/CanvasContext.tsx","contexts/SnackbarContext.tsx","icons/down_arrow.svg","icons/up_arrow.svg","components/Dropdown.tsx","actions/drawNode.ts","actions/drawEdge.ts","actions/nodeColor.ts","actions/visualizeColor.ts","actions/redrawCanvas.ts","components/Header.tsx","hooks/windowSize.ts","icons/right_arrow.svg","components/Newedge.tsx","actions/contextMenuState.ts","actions/createNode.ts","actions/edgeColor.ts","actions/getNextIndex.ts","components/Contextmenu.tsx","components/Canvas.tsx","components/Algorithmdropdown.tsx","algorithms/breadthFirstTraversal.ts","algorithms/cycleDetection.ts","algorithms/depthFirstTraversal.ts","algorithms/topologicalSort.ts","actions/visualizeAlgorithm.ts","components/Visualize.tsx","icons/close.svg","components/Snackbar.tsx","App.tsx","index.tsx"],"names":["AdjacencyListContext","createContext","nodeList","edgeList","adjacencyList","addNode","node","addEdge","edge","addUndirectedEdge","edgeOne","edgeTwo","moveNode","index","deleteNode","x","y","clearNodes","AdjacencyListContextProvider","props","useState","setNodeList","setEdgeList","setAdjacencyList","Provider","value","push","count","target","tempAdjacencyList","item","source","console","log","temp","iter","Math","abs","clientX","clientY","tempTwo","filter","length","splice","children","CanvasContext","canvas","context","setCanvas","setContext","CanvasContextProvider","SnackbarContext","open","message","toggleSnackbar","SnackbarContextProvider","setOpen","setMessage","_extends","Object","assign","i","arguments","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref3","_ref","svgRef","title","viewBox","width","height","ref","ForwardRef","forwardRef","Dropdown","setNode","className","onClick","event","preventDefault","map","handleChangeNode","Fragment","drawNode","nodeCount","color","beginPath","arc","PI","lineWidth","fillStyle","closePath","strokeStyle","stroke","font","textAlign","textBaseline","fillText","toString","drawEdge","directed","sourceX","canvasX","sourceY","canvasY","targetX","targetY","theta","atan2","cos","sin","moveTo","lineTo","from","to","radius","angle","x_center","y_center","fromX","fromY","drawArrowhead","nodeColor","document","documentElement","getAttribute","visualizeColor","redrawCanvas","edgeColor","clearRect","rect","getBoundingClientRect","right","windowX","bottom","windowY","window","innerHeight","left","top","visualize","Header","setSource","setTarget","useContext","trans","classList","add","setTimeout","remove","sourceNum","targetNum","sourceNode","targetNode","itr","weight","type","id","checked","setAttribute","htmlFor","useWindowSize","size","setSize","useLayoutEffect","updateSize","innerWidth","addEventListener","removeEventListener","Newedge","contextMenuState","result","createNode","getNextIndex","slice","Contextmenu","contextmenu","setContextMenuState","isOpen","newedge","setNewedge","pos","setPos","edgeCase","y1","y2","divpos","setDivpos","setIndex","setResult","divElementOne","useRef","divElementTwo","useEffect","innerX","innerY","current","rectOne","rectTwo","edgePos","setNewEdgeWrapper","newEdge","onMouseLeave","style","position","undefined","onContextMenu","xPos","yPos","newNode","onMouseEnter","Canvas","nodetomove","setNodetomove","button","setButton","setContextMenu","canvasRef","state","newContextMenuState","getContext","data-testid","onMouseDown","buttons","onMouseMove","onMouseUp","onMouseOut","algoList","setAlgorithm","breadthFirstTraversal","visited","Set","queue","shift","has","cycleDetectionHelper","recStack","delete","cycleDetection","errorDetected","depthFirstTraversal","depthFirstTraversalHelper","visisted","dfs","tempVisited","getIndex","clear","topologicalSort","slowDrawNode","resultList","res","a","promises","Promise","rej","findIndex","all","then","visualizeAlgorithm","Visualize","algorithm","Algorithmdropdown","resultNodes","item2","val","Snackbar","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7e89917.chunk.js","sourcesContent":["import React, { createContext, useState, ReactNode } from \"react\";\nimport adjacencyListProvider from \"../types/adjacencyListProvider\";\nimport adjacencyListObject from \"../types/adjacencyListObject\";\nimport edge from \"../types/edge\";\nimport node from \"../types/node\";\n\nconst initialState: adjacencyListProvider = {\n  nodeList: [],\n  edgeList: [],\n  adjacencyList: [],\n  addNode: (node: node) => {},\n  addEdge: (edge: edge) => {},\n  addUndirectedEdge: (edgeOne: edge, edgeTwo: edge) => {},\n  moveNode: (index: node) => {},\n  deleteNode: (x: number, y: number) => {},\n  clearNodes: () => {},\n};\n\nexport const AdjacencyListContext = createContext<adjacencyListProvider>(\n  initialState\n);\n\ntype IProps = {\n  children: ReactNode;\n};\n\nexport const AdjacencyListContextProvider = (props: IProps) => {\n  const [nodeList, setNodeList] = useState<node[]>([]);\n  const [edgeList, setEdgeList] = useState<edge[]>([]);\n  const [adjacencyList, setAdjacencyList] = useState<adjacencyListObject[]>([]);\n\n  const addNode = (node: node) => {\n    let tempAdjacencyList = adjacencyList;\n    tempAdjacencyList.push({ count: node.count, target: [] });\n    setNodeList([...nodeList, node]);\n    setAdjacencyList(adjacencyList);\n  };\n\n  const addUndirectedEdge = (edgeOne: edge, edgeTwo: edge) => {\n    let tempAdjacencyList = adjacencyList;\n    for (let item of tempAdjacencyList) {\n      if (item.count === edgeOne.source.count) {\n        item.target.push(edgeOne.target.count);\n      } else if (item.count === edgeTwo.source.count) {\n        item.target.push(edgeTwo.target.count);\n      }\n    }\n    setEdgeList([...edgeList, edgeOne, edgeTwo]);\n    setAdjacencyList(tempAdjacencyList);\n    console.log(adjacencyList);\n    console.log(edgeList);\n  };\n\n  const addEdge = (edge: edge) => {\n    let tempAdjacencyList = adjacencyList;\n    for (let item of tempAdjacencyList) {\n      if (item.count === edge.source.count) {\n        item.target.push(edge.target.count);\n      }\n    }\n    setEdgeList([...edgeList, edge]);\n    setAdjacencyList(tempAdjacencyList);\n    console.log(adjacencyList);\n    console.log(edgeList);\n  };\n\n  const moveNode = (node: node) => {\n    const count = node.count;\n    const temp = nodeList;\n    for (let iter in temp) {\n      if (temp[iter].count === count) {\n        temp[iter] = node;\n      }\n    }\n    setNodeList(temp);\n  };\n\n  const deleteNode = (x: number, y: number) => {\n    let index: number = 0;\n    for (let iter of nodeList) {\n      if (Math.abs(x - iter.clientX) < 20 && Math.abs(y - iter.clientY) < 20) {\n        index = iter.count;\n      }\n    }\n    const tempTwo = edgeList.filter((item) => {\n      console.log(item.source.count, item.target.count, index);\n      return item.source.count !== index && item.target.count !== index;\n    });\n    setEdgeList(tempTwo);\n    const temp = nodeList.filter((item) => {\n      return item.count !== index;\n    });\n    let tempAdjacencyList = adjacencyList;\n    let count = tempAdjacencyList.length;\n    while (count--) {\n      if (tempAdjacencyList[count].count === index) {\n        tempAdjacencyList.splice(count, 1);\n      }\n    }\n    for (let item of tempAdjacencyList) {\n      let count = item.target.length;\n      while (count--) {\n        if (item.target[count] === index) {\n          item.target.splice(count, 1);\n        }\n      }\n    }\n\n    setAdjacencyList(tempAdjacencyList);\n    setNodeList(temp);\n  };\n\n  const clearNodes = () => {\n    setNodeList([]);\n    setEdgeList([]);\n    setAdjacencyList([]);\n  };\n\n  return (\n    <AdjacencyListContext.Provider\n      value={{\n        nodeList,\n        edgeList,\n        adjacencyList,\n        addNode,\n        addEdge,\n        addUndirectedEdge,\n        clearNodes,\n        moveNode,\n        deleteNode,\n      }}\n    >\n      {props.children}\n    </AdjacencyListContext.Provider>\n  );\n};\n","import React, { useState, ReactNode, createContext } from \"react\";\nimport canvasProvider from \"../types/canvasProvider\";\n\nconst initialState = {\n  canvas: null,\n  context: null,\n  setCanvas: () => {},\n  setContext: () => {},\n};\n\nexport const CanvasContext = createContext<canvasProvider>(initialState);\n\ntype Iprops = {\n  children: ReactNode;\n};\n\nexport const CanvasContextProvider = (props: Iprops) => {\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | null>(null);\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\n  return (\n    <CanvasContext.Provider value={{ canvas, context, setCanvas, setContext }}>\n      {props.children}\n    </CanvasContext.Provider>\n  );\n};\n","import React, { useState, ReactNode, createContext } from \"react\";\nimport snackbarProvider from \"../types/snackbarProvider\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n  toggleSnackbar: () => {},\n};\n\nexport const SnackbarContext = createContext<snackbarProvider>(initialState);\n\ntype Iprops = {\n  children: ReactNode;\n};\n\nexport const SnackbarContextProvider = (props: Iprops) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const toggleSnackbar = (message: string = \"\") => {\n    if (message.length < 1) {\n      setOpen(false);\n      setMessage(\"\");\n    } else {\n      setOpen(true);\n      setMessage(message);\n    }\n  };\n\n  return (\n    <SnackbarContext.Provider value={{ open, message, toggleSnackbar }}>\n      {props.children}\n    </SnackbarContext.Provider>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n});\n\nvar SvgDownArrow = function SvgDownArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDownArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/down_arrow.7409de40.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n});\n\nvar SvgUpArrow = function SvgUpArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUpArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/up_arrow.969b1a78.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport { ReactComponent as DownArrow } from \"../icons/down_arrow.svg\";\nimport { ReactComponent as UpArrow } from \"../icons/up_arrow.svg\";\nimport node from \"../types/node\";\n\ntype AppProps = {\n  nodeList: node[];\n  count: number;\n  setNode(value: number): void;\n};\n\nconst Dropdown = ({ nodeList, count, setNode }: AppProps) => {\n  const [open, setOpen] = useState<Boolean>(false);\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setOpen(!open);\n  };\n\n  const handleChangeNode = (\n    event: React.MouseEvent<HTMLDivElement>,\n    index: number\n  ) => {\n    event.preventDefault();\n    setOpen(!open);\n    setNode(index);\n  };\n\n  return (\n    <div className=\"dropdown-container\" onClick={handleClick}>\n      <div className=\"dropdown-text-container\">\n        <div className=\"dropdown-text\"> Node {count} </div>\n        <div className=\"dropdown-arrow\">\n          {open ? <UpArrow /> : <DownArrow />}\n        </div>\n      </div>\n      {open ? (\n        <div className=\"dropdown-item-container\">\n          {nodeList.length <= 1 ? (\n            <div className=\"dropdown-item\">Nodes Unavailable</div>\n          ) : (\n            nodeList.map((item) => {\n              if (item.count !== count) {\n                return (\n                  <div\n                    className=\"dropdown-item\"\n                    key={item.count}\n                    onClick={(event) => handleChangeNode(event, item.count)}\n                  >\n                    Node {item.count}\n                  </div>\n                );\n              } else {\n                return <React.Fragment key={item.count} />;\n              }\n            })\n          )}\n        </div>\n      ) : (\n        <React.Fragment />\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","const drawNode = (\n  nodeCount: number,\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  color: string\n): void => {\n  context.beginPath();\n  context.arc(x, y, 20, 0, 2 * Math.PI, false);\n  context.lineWidth = 2;\n  context.fillStyle = color;\n  context.closePath();\n  context.fill();\n  context.strokeStyle = \"#121212\";\n  context.fillStyle = \"#121212\";\n  context.arc(x, y, 20, 0, 2 * Math.PI, false);\n  context.stroke();\n  context.font = \"20px Roboto\";\n  context.textAlign = \"center\";\n  context.textBaseline = \"middle\";\n  context.fillText(nodeCount.toString(), x, y);\n};\n\nexport default drawNode;\n","import node from \"../types/node\";\n\nfunction drawArrowhead(\n  context: CanvasRenderingContext2D,\n  from: [number, number],\n  to: [number, number],\n  radius: number,\n  color: string\n) {\n  let [x_center, y_center] = to;\n  let [fromX, fromY] = from;\n\n  let angle;\n  let x;\n  let y;\n  context.fillStyle = color;\n\n  angle = Math.atan2(y_center - fromY, x_center - fromX);\n  x = x_center;\n  y = y_center;\n\n  context.moveTo(x, y);\n\n  angle += (1.0 / 3.0) * (2 * Math.PI);\n  x = radius * Math.cos(angle) + x_center;\n  y = radius * Math.sin(angle) + y_center;\n\n  context.lineTo(x, y);\n\n  angle += (1.0 / 3.0) * (2 * Math.PI);\n  x = radius * Math.cos(angle) + x_center;\n  y = radius * Math.sin(angle) + y_center;\n\n  context.lineTo(x, y);\n\n  context.closePath();\n\n  context.fill();\n}\n\nconst drawEdge = (\n  source: node,\n  target: node,\n  directed: boolean,\n  context: CanvasRenderingContext2D,\n  color: string\n): void => {\n  let sourceX = source.canvasX;\n  let sourceY = source.canvasY;\n  let targetX = target.canvasX;\n  let targetY = target.canvasY;\n  const theta = Math.atan2(targetY - sourceY, targetX - sourceX);\n  targetX = targetX - 20 * Math.cos(theta);\n  targetY = targetY - 20 * Math.sin(theta);\n  sourceX = sourceX + 20 * Math.cos(theta);\n  sourceY = sourceY + 20 * Math.sin(theta);\n  context.lineWidth = 3;\n  context.strokeStyle = color;\n  context.fillStyle = color;\n  context.beginPath();\n  context.moveTo(sourceX, sourceY);\n  context.lineTo(targetX, targetY);\n  context.stroke();\n  if (directed) {\n    drawArrowhead(context, [sourceX, sourceY], [targetX, targetY], 15, color);\n  }\n};\n\nexport default drawEdge;\n","const nodeColor = (document: Document): string => {\n  let theme = document.documentElement.getAttribute(\"data-theme\");\n  let nodeColor = \"#eeeeee\";\n  if (theme === \"dark\") {\n    nodeColor = \"#eeeeee\";\n  }\n  return nodeColor;\n};\n\nexport default nodeColor;\n","const visualizeColor = (document: Document): string => {\n  let theme = document.documentElement.getAttribute(\"data-theme\");\n  let visualizeColor = \"#6002ee\";\n  if (theme === \"dark\") {\n    visualizeColor = \"#03dac5\";\n  }\n  return visualizeColor;\n};\n\nexport default visualizeColor;\n","import drawNode from \"../actions/drawNode\";\nimport drawEdge from \"../actions/drawEdge\";\nimport nodeColor from \"../actions/nodeColor\";\nimport visualizeColor from \"../actions/visualizeColor\";\nimport node from \"../types/node\";\nimport edge from \"../types/edge\";\n\nconst redrawCanvas = (\n  nodeList: node[],\n  edgeList: edge[],\n  canvas: HTMLCanvasElement | null,\n  context: CanvasRenderingContext2D | null,\n  edgeColor: string\n) => {\n  if (canvas && context) {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    const rect = canvas.getBoundingClientRect();\n    for (let item of nodeList) {\n      item.color = nodeColor(document);\n      if (rect.right !== item.windowX || rect.bottom !== item.windowY) {\n        console.log(item.count);\n        console.log(item.windowY);\n        console.log(window.innerHeight);\n        item.clientX = item.clientX * (rect.right / item.windowX);\n        item.clientY = item.clientY * (rect.bottom / item.windowY);\n        item.canvasX = item.clientX - rect.left;\n        item.canvasY = item.clientY - rect.top;\n        item.windowX = rect.right;\n        item.windowY = rect.bottom;\n      }\n    }\n    for (let item of edgeList) {\n      drawEdge(item.source, item.target, item.directed, context, edgeColor);\n    }\n    for (let item of nodeList) {\n      if (item.visualize) {\n        item.color = visualizeColor(document);\n      }\n      drawNode(item.count, context, item.canvasX, item.canvasY, item.color);\n    }\n  }\n};\n\nexport default redrawCanvas;\n","import React, { useContext, useState } from \"react\";\nimport { AdjacencyListContext } from \"../contexts/AdjacencyListContext\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport Dropdown from \"../components/Dropdown\";\nimport redrawCanvas from \"../actions/redrawCanvas\";\nimport canvasProvider from \"../types/canvasProvider\";\nimport edge from \"../types/edge\";\nimport node from \"../types/node\";\nimport \"../styles/Header.scss\";\n\nconst Header = () => {\n  const [source, setSource] = useState<number>(0);\n  const [target, setTarget] = useState<number>(0);\n  const {\n    nodeList,\n    edgeList,\n    addEdge,\n    addUndirectedEdge,\n    clearNodes,\n  } = useContext(AdjacencyListContext);\n  const { canvas, context } = useContext<canvasProvider>(CanvasContext);\n\n  const handleThemeChange = (value: boolean): void => {\n    console.log(\"test\");\n    if (value) {\n      trans();\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n      redrawCanvas(nodeList, edgeList, canvas, context, \"#eeeeee\");\n    } else {\n      trans();\n      document.documentElement.setAttribute(\"data-theme\", \"light\");\n      redrawCanvas(nodeList, edgeList, canvas, context, \"#333333\");\n    }\n  };\n\n  const handleNewDirectedEdge = (event: React.FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (context && canvas) {\n      let sourceNum: number = source;\n      let targetNum: number = target;\n      let sourceNode: node | null = null;\n      let targetNode: node | null = null;\n      for (let itr of nodeList) {\n        if (itr.count === sourceNum) {\n          sourceNode = itr;\n        } else if (itr.count === targetNum) {\n          targetNode = itr;\n        }\n      }\n      if (sourceNode && targetNode) {\n        const newEdge: edge = {\n          source: sourceNode,\n          target: targetNode,\n          directed: true,\n          weight: 1,\n        };\n        addEdge(newEdge);\n      }\n    }\n  };\n\n  const handleNewUndirectedEdge = (\n    event: React.FormEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n    if (context && canvas) {\n      let sourceNum: number = source;\n      let targetNum: number = target;\n      let sourceNode: node | null = null;\n      let targetNode: node | null = null;\n      for (let itr of nodeList) {\n        if (itr.count === sourceNum) {\n          sourceNode = itr;\n        } else if (itr.count === targetNum) {\n          targetNode = itr;\n        }\n      }\n      if (sourceNode && targetNode) {\n        const edgeOne: edge = {\n          source: sourceNode,\n          target: targetNode,\n          directed: false,\n          weight: 1,\n        };\n        const edgeTwo: edge = {\n          source: targetNode,\n          target: sourceNode,\n          directed: false,\n          weight: 1,\n        };\n        addUndirectedEdge(edgeOne, edgeTwo);\n      }\n    }\n  };\n\n  const handleClearCanvas = (event: React.FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (context && canvas) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      clearNodes();\n    }\n  };\n\n  let trans = () => {\n    document.documentElement.classList.add(\"transition\");\n    window.setTimeout(() => {\n      document.documentElement.classList.remove(\"transition\");\n    }, 1000);\n  };\n\n  return (\n    <header className=\"navbar\">\n      <Dropdown nodeList={nodeList} count={source} setNode={setSource} />\n      <Dropdown nodeList={nodeList} count={target} setNode={setTarget} />\n      <button\n        className=\"add-edge-one header-button\"\n        onClick={handleNewDirectedEdge}\n      >\n        Add Directed Edge\n      </button>\n      <button\n        className=\"add-edge-two header-button\"\n        onClick={handleNewUndirectedEdge}\n      >\n        Add Undirected Edge\n      </button>\n      <button\n        className=\"clear-canvas header-button\"\n        onClick={handleClearCanvas}\n      >\n        Clear Canvas\n      </button>\n      <div className=\"toggle-container\">\n        <input\n          type=\"checkbox\"\n          id=\"switch\"\n          className=\"toggle-switch\"\n          onClick={(event) => {\n            handleThemeChange((event.target as HTMLInputElement).checked);\n          }}\n        />\n        <label className=\"toggle-label\" htmlFor=\"switch\">\n          Toggle\n        </label>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useState, useLayoutEffect } from \"react\";\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    const updateSize = (): void => {\n      setSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n};\n\nexport default useWindowSize;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n});\n\nvar SvgRightArrow = function SvgRightArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgRightArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/right_arrow.47d81b84.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext } from \"react\";\nimport { AdjacencyListContext } from \"../contexts/AdjacencyListContext\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport canvasProvider from \"../types/canvasProvider\";\nimport edge from \"../types/edge\";\nimport node from \"../types/node\";\n\ntype AppProps = {\n  source: number;\n  target: number;\n  directed: boolean;\n};\n\nconst Newedge = ({ source, target, directed }: AppProps) => {\n  const { nodeList, addEdge, addUndirectedEdge } = useContext(\n    AdjacencyListContext\n  );\n  const { canvas, context } = useContext<canvasProvider>(CanvasContext);\n\n  const handleAddDirectedEdge = (event: React.MouseEvent) => {\n    event.preventDefault();\n    if (context && canvas) {\n      let sourceNum: number = source;\n      let targetNum: number = target;\n      let sourceNode: node | null = null;\n      let targetNode: node | null = null;\n      for (let itr of nodeList) {\n        if (itr.count === sourceNum) {\n          sourceNode = itr;\n        } else if (itr.count === targetNum) {\n          targetNode = itr;\n        }\n      }\n      if (sourceNode && targetNode) {\n        const newEdge: edge = {\n          source: sourceNode,\n          target: targetNode,\n          directed: true,\n          weight: 1,\n        };\n        addEdge(newEdge);\n      }\n    }\n  };\n\n  const handleAddUndirectedEdge = (event: React.MouseEvent) => {\n    event.preventDefault();\n    if (context && canvas) {\n      let sourceNum: number = +source;\n      let targetNum: number = +target;\n      let sourceNode: node | null = null;\n      let targetNode: node | null = null;\n      for (let itr of nodeList) {\n        if (itr.count === sourceNum) {\n          sourceNode = itr;\n        } else if (itr.count === targetNum) {\n          targetNode = itr;\n        }\n      }\n      if (sourceNode && targetNode) {\n        const edgeOne: edge = {\n          source: sourceNode,\n          target: targetNode,\n          directed: false,\n          weight: 1,\n        };\n        const edgeTwo: edge = {\n          source: targetNode,\n          target: sourceNode,\n          directed: false,\n          weight: 1,\n        };\n        addUndirectedEdge(edgeOne, edgeTwo);\n      }\n    }\n  };\n\n  return (\n    <div\n      key={target}\n      onClick={directed ? handleAddDirectedEdge : handleAddUndirectedEdge}\n      className=\"context-menu-option context-menu-edge-option\"\n    >\n      Node {target}\n    </div>\n  );\n};\n\nexport default Newedge;\n","import node from \"../types/node\";\n\nconst contextMenuState = (nodeList: node[], x: number, y: number): boolean => {\n  let result: boolean = true;\n  for (let item of nodeList) {\n    console.log(`Pos: ${x} ${y}, Item: ${item.windowX} ${item.windowY}`);\n    if (Math.abs(item.clientX - x) < 20 && Math.abs(item.clientY - y) < 20) {\n      result = false;\n    }\n  }\n\n  return result;\n};\n\nexport default contextMenuState;\n","import node from \"../types/node\";\n\nconst createNode = (\n  count: number,\n  canvasX: number,\n  canvasY: number,\n  clientX: number,\n  clientY: number,\n  windowX: number,\n  windowY: number,\n  color: string\n): node => {\n  const newNode: node = {\n    count: count,\n    canvasX: canvasX,\n    canvasY: canvasY,\n    clientX: clientX,\n    clientY: clientY,\n    windowX: windowX,\n    windowY: windowY,\n    color: color,\n    visualize: false,\n  };\n  return newNode;\n};\n\nexport default createNode;\n","const edgeColor = (document: Document): string => {\n  let theme = document.documentElement.getAttribute(\"data-theme\");\n  let edgeColor = \"#333333\";\n  if (theme === \"dark\") {\n    edgeColor = \"#eeeeee\";\n  }\n  return edgeColor;\n};\n\nexport default edgeColor;\n","import node from \"../types/node\";\n\nconst getNextIndex = (nodeList: node[]) => {\n  let index = 0;\n  if (nodeList.length > 0) {\n    index = nodeList.slice(-1)[0].count + 1;\n  }\n  return index;\n};\n\nexport default getNextIndex;\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport { AdjacencyListContext } from \"../contexts/AdjacencyListContext\";\nimport { ReactComponent as RightArrow } from \"../icons/right_arrow.svg\";\nimport Newedge from \"../components/Newedge\";\nimport contextMenuState from \"../actions/contextMenuState\";\nimport createNode from \"../actions/createNode\";\nimport edgeColor from \"../actions/edgeColor\";\nimport getNextIndex from \"../actions/getNextIndex\";\nimport redrawCanvas from \"../actions/redrawCanvas\";\nimport adjacencyListProvider from \"../types/adjacencyListProvider\";\nimport canvasProvider from \"../types/canvasProvider\";\nimport contextMenu from \"../types/contextMenu\";\nimport node from \"../types/node\";\nimport nodeColor from \"../actions/nodeColor\";\n\ntype AppProps = {\n  contextmenu: contextMenu;\n  setContextMenuState(state: boolean, x?: number, y?: number): void;\n};\n\ntype DropdownMenu = {\n  isOpen: boolean;\n  directed?: boolean;\n};\n\ntype position = {\n  x: number;\n  y: number;\n};\n\ntype newedgePosition = {\n  x: number;\n  edgeCase: boolean;\n  y1: number;\n  y2: number;\n};\n\nconst Contextmenu = ({ contextmenu, setContextMenuState }: AppProps) => {\n  const [newedge, setNewedge] = useState<DropdownMenu>({ isOpen: false });\n  const [pos, setPos] = useState<position>({ x: 0, y: 0 });\n  const [divpos, setDivpos] = useState<newedgePosition>({\n    x: 0,\n    edgeCase: false,\n    y1: 0,\n    y2: 0,\n  });\n  const [index, setIndex] = useState<number>(-1);\n  const [result, setResult] = useState<boolean>(true);\n  const divElementOne = useRef<HTMLDivElement>(null);\n  const divElementTwo = useRef<HTMLDivElement>(null);\n  const { x, y } = contextmenu;\n  const { canvas, context } = useContext<canvasProvider>(CanvasContext);\n  const { nodeList, edgeList, addNode, clearNodes, deleteNode } = useContext<\n    adjacencyListProvider\n  >(AdjacencyListContext);\n\n  useEffect(() => {\n    let innerX = x;\n    let innerY = y;\n    if (x + 200 > window.innerWidth) {\n      innerX = x - 200;\n    }\n    if (y + 150 > window.innerHeight) {\n      if (!result) innerY = y - 150;\n      else innerY = y - 100;\n    }\n    if (divElementOne.current != null) {\n      const rectOne = divElementOne.current.getBoundingClientRect();\n      const rectTwo = divElementOne.current.getBoundingClientRect();\n      let edgePos = false;\n      let right = rectOne.right;\n      let top = rectOne.top;\n      let bottom = rectOne.bottom;\n      if (rectOne.right + 200 > window.innerWidth) {\n        right = right - 403;\n      }\n      if (rectOne.top + 200 > window.innerHeight) {\n        top = window.innerHeight - rectTwo.top - 45;\n        bottom = window.innerHeight - rectTwo.bottom - 45;\n        edgePos = true;\n      }\n      console.log(\"top \", top);\n      console.log(\"bottom \", bottom);\n      setDivpos({ x: right, edgeCase: edgePos, y1: top, y2: bottom });\n    }\n    setPos({ x: innerX, y: innerY });\n    setResult(contextMenuState(nodeList, x, y));\n    if (result === false) {\n      for (let iter of nodeList) {\n        if (\n          Math.abs(x - iter.clientX) < 20 &&\n          Math.abs(y - iter.clientY) < 20\n        ) {\n          console.log(iter.count);\n          setIndex(iter.count);\n        }\n      }\n    }\n  }, [x, y, nodeList, index, result]);\n\n  const setNewEdgeWrapper = (\n    isOpen: boolean,\n    directed: boolean = true\n  ): void => {\n    const newEdge = { isOpen: isOpen, directed: directed };\n    setNewedge(newEdge);\n  };\n\n  const handleRightClick = (event: React.MouseEvent): void => {\n    event.preventDefault();\n  };\n\n  const handleAddNode = (event: React.FormEvent<HTMLDivElement>): void => {\n    event.preventDefault();\n    if (canvas) {\n      const rect = canvas.getBoundingClientRect();\n      const xPos = x - rect.left;\n      const yPos = y - rect.top;\n      if (context) {\n        const nodeCount: number = getNextIndex(nodeList);\n        const newNode: node = createNode(\n          nodeCount,\n          xPos,\n          yPos,\n          x,\n          y,\n          rect.right,\n          rect.bottom,\n          nodeColor(document)\n        );\n        addNode(newNode);\n      }\n      setContextMenuState(false);\n    }\n  };\n\n  const handleClearCanvas = (event: React.FormEvent<HTMLDivElement>): void => {\n    event.preventDefault();\n    console.log(\"Clear Canvas\");\n    if (context && canvas) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      clearNodes();\n    }\n    setContextMenuState(false);\n  };\n\n  const handleDeleteNode = (event: React.FormEvent<HTMLDivElement>): void => {\n    event.preventDefault();\n    deleteNode(x, y);\n    redrawCanvas(nodeList, edgeList, canvas, context, edgeColor(document));\n    setContextMenuState(false);\n  };\n\n  const handleMouseInDirected = (event: React.MouseEvent): void => {\n    event.preventDefault();\n    setNewEdgeWrapper(true, true);\n  };\n\n  const handleMouseInUndirected = (event: React.MouseEvent): void => {\n    event.preventDefault();\n    setNewEdgeWrapper(true, false);\n  };\n\n  const handleMouseOut = (event: React.MouseEvent): void => {\n    event.preventDefault();\n    setNewEdgeWrapper(false);\n  };\n\n  return (\n    <div className=\"context-menu-container\" onMouseLeave={handleMouseOut}>\n      {newedge.isOpen ? (\n        <div\n          className=\"context-menu context-menu-new-edge\"\n          style={\n            divpos.edgeCase\n              ? {\n                  left: divpos.x,\n                  bottom: newedge.directed ? divpos.y1 : divpos.y2,\n                  position: \"absolute\",\n                }\n              : {\n                  left: divpos.x,\n                  top: newedge.directed ? divpos.y1 : divpos.y2,\n                  position: \"absolute\",\n                }\n          }\n        >\n          {nodeList.length === 1 ? (\n            <div className=\"context-menu-option context-menu-edge-option\">\n              Nodes Unavailable\n            </div>\n          ) : (\n            nodeList.map((value: node) => {\n              if (value.count !== index && newedge.directed !== undefined) {\n                return (\n                  <Newedge\n                    key={value.count}\n                    source={index}\n                    target={value.count}\n                    directed={newedge.directed}\n                  />\n                );\n              }\n              return null;\n            })\n          )}\n        </div>\n      ) : (\n        <React.Fragment />\n      )}\n      <div\n        className=\"context-menu\"\n        style={{ left: pos.x, top: pos.y, position: \"absolute\" }}\n        onContextMenu={handleRightClick}\n      >\n        {result ? (\n          <div>\n            <div className=\"context-menu-option\" onClick={handleAddNode}>\n              <span className=\"context-menu-text\">Add Node</span>\n            </div>\n            <div className=\"context-menu-option\" onClick={handleClearCanvas}>\n              <span className=\"context-menu-text\">Clear Canvas</span>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"context-menu-option\" onClick={handleDeleteNode}>\n              <span className=\"context-menu-text\">Delete Node</span>\n            </div>\n            <div\n              className=\"context-menu-option context-menu-arrow\"\n              ref={divElementOne}\n              onMouseEnter={handleMouseInDirected}\n            >\n              <span className=\"context-menu-arrow-text context-menu-text\">\n                Add Direceted Edge\n              </span>\n              <RightArrow className=\"context-menu-arrow-head\" />\n            </div>\n            <div\n              className=\"context-menu-option context-menu-arrow\"\n              ref={divElementTwo}\n              onMouseEnter={handleMouseInUndirected}\n            >\n              <span className=\"context-menu-arrow-text context-menu-text\">\n                Add Undireceted Edge\n              </span>\n              <RightArrow className=\"context-menu-arrow-head\" />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Contextmenu;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { AdjacencyListContext } from \"../contexts/AdjacencyListContext\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport useWindowSize from \"../hooks/windowSize\";\nimport Contextmenu from \"../components/Contextmenu\";\nimport createNode from \"../actions/createNode\";\nimport edgeColor from \"../actions/edgeColor\";\nimport getNextIndex from \"../actions/getNextIndex\";\nimport redrawCanvas from \"../actions/redrawCanvas\";\nimport adjacencyListProvider from \"../types/adjacencyListProvider\";\nimport canvasProvider from \"../types/canvasProvider\";\nimport contextMenu from \"../types/contextMenu\";\nimport node from \"../types/node\";\nimport nodeColor from \"../actions/nodeColor\";\n\nconst Canvas = () => {\n  const initialContextMenu: contextMenu = { isOpen: false, x: 0, y: 0 };\n  const [nodetomove, setNodetomove] = useState<node | null>(null);\n  const [button, setButton] = useState<number>(0);\n  const [contextmenu, setContextMenu] = useState<contextMenu>(\n    initialContextMenu\n  );\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [width, height] = useWindowSize();\n  const { nodeList, edgeList, moveNode, addNode } = useContext<\n    adjacencyListProvider\n  >(AdjacencyListContext);\n  const { canvas, context, setCanvas, setContext } = useContext<canvasProvider>(\n    CanvasContext\n  );\n\n  const setContextMenuState = (\n    state: boolean,\n    x: number = 0,\n    y: number = 0\n  ): void => {\n    console.log(state);\n    const newContextMenuState: contextMenu = {\n      isOpen: state,\n      x: x,\n      y: y,\n    };\n    setContextMenu(newContextMenuState);\n  };\n\n  useEffect(() => {\n    let canvas = canvasRef.current;\n    if (canvas) {\n      setCanvas(canvas);\n      setContext(canvas.getContext(\"2d\"));\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    }\n    redrawCanvas(nodeList, edgeList, canvas, context, edgeColor(document));\n  }, [width, height, nodeList, edgeList, context, setCanvas, setContext]);\n\n  const handleRightClick = (event: React.MouseEvent): void => {\n    event.preventDefault();\n  };\n\n  const handleMouseDown = (event: React.MouseEvent): void => {\n    event.preventDefault();\n    setButton(event.buttons);\n    if (canvas && event.buttons === 1) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const rect = canvas.getBoundingClientRect();\n      let index: number = -1;\n      for (let iter in nodeList) {\n        if (\n          Math.abs(x - nodeList[iter].clientX) < 20 &&\n          Math.abs(y - nodeList[iter].clientY) < 20\n        ) {\n          index = +iter;\n        }\n      }\n      if (index > -1) {\n        console.log(index);\n        let node = nodeList[index];\n        node.clientX = x;\n        node.clientY = y;\n        node.canvasX = x - rect.left;\n        node.canvasY = y - rect.top;\n        setNodetomove(node);\n      }\n    }\n    if (event.buttons === 2) {\n      setContextMenuState(true, event.clientX, event.clientY);\n      console.log(\"Context Menu Open\");\n    }\n  };\n\n  const handleMouseMove = (event: React.MouseEvent): void => {\n    event.preventDefault();\n    if (nodetomove && canvas && event.buttons === 1) {\n      const x = event.clientX;\n      const y = event.clientY;\n      let node = nodetomove;\n      let rect = canvas.getBoundingClientRect();\n      node.clientX = x;\n      node.clientY = y;\n      node.canvasX = x - rect.left;\n      node.canvasY = y - rect.top;\n      setNodetomove(node);\n\n      moveNode(nodetomove);\n      redrawCanvas(nodeList, edgeList, canvas, context, edgeColor(document));\n    }\n  };\n\n  const handleMouseUp = (event: React.MouseEvent): void => {\n    event.preventDefault();\n    console.log(event.buttons);\n    if (nodetomove) {\n      setNodetomove(null);\n    } else {\n      if (contextmenu.isOpen === false && canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        if (context) {\n          const nodeCount: number = getNextIndex(nodeList);\n          const newNode: node = createNode(\n            nodeCount,\n            x,\n            y,\n            event.clientX,\n            event.clientY,\n            rect.right,\n            rect.bottom,\n            nodeColor(document)\n          );\n          addNode(newNode);\n        }\n      } else {\n        if (button === 1) {\n          setContextMenuState(false);\n        }\n      }\n    }\n  };\n\n  const handleMouseOut = (event: React.MouseEvent): void => {\n    event.preventDefault();\n    setNodetomove(null);\n  };\n\n  return (\n    <div className=\"canvas-container\">\n      {contextmenu.isOpen ? (\n        <Contextmenu\n          contextmenu={contextmenu}\n          setContextMenuState={setContextMenuState}\n        />\n      ) : (\n        <React.Fragment />\n      )}\n      <canvas\n        ref={canvasRef}\n        data-testid=\"canvas-element\"\n        className=\"canvas\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n        onContextMenu={handleRightClick}\n      />\n    </div>\n  );\n};\n\nexport default Canvas;\n","import React, { useState } from \"react\";\nimport { ReactComponent as DownArrow } from \"../icons/down_arrow.svg\";\nimport { ReactComponent as UpArrow } from \"../icons/up_arrow.svg\";\n\ntype AppProps = {\n  algoList: string[];\n  count: number;\n  setAlgorithm(value: number): void;\n};\n\nconst Dropdown = ({ algoList, count, setAlgorithm }: AppProps) => {\n  const [open, setOpen] = useState<Boolean>(false);\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setOpen(!open);\n  };\n\n  const handleChangeNode = (\n    event: React.MouseEvent<HTMLDivElement>,\n    index: number\n  ) => {\n    event.preventDefault();\n    setOpen(!open);\n    setAlgorithm(index);\n  };\n\n  return (\n    <div className=\"algorithm-dropdown-container\" onClick={handleClick}>\n      {open ? (\n        <div className=\"algorithm-dropdown-item-container\">\n          {algoList.map((item) => {\n            return (\n              <div\n                className=\"algorithm-dropdown-item\"\n                key={item}\n                onClick={(event) =>\n                  handleChangeNode(event, algoList.indexOf(item))\n                }\n              >\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <React.Fragment />\n      )}\n      <div className=\"algorithm-dropdown-text-container\">\n        <div className=\"algorithm-dropdown-text\"> {algoList[count]} </div>\n        <div className=\"algorithm-dropdown-arrow\">\n          {open ? <UpArrow /> : <DownArrow />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import adjacencyListObject from \"../types/adjacencyListObject\";\n\nconst breadthFirstTraversal = (\n  adjacencyList: adjacencyListObject[]\n): number[] => {\n  let result: number[] = [];\n  if (adjacencyList.length > 0) {\n    let visited: Set<number> = new Set<number>();\n    let queue: number[] = [];\n    visited.add(adjacencyList[0].count);\n    queue.push(adjacencyList[0].count);\n    while (queue.length > 0) {\n      let temp: number = queue[0];\n      queue.shift();\n      result.push(temp);\n      for (let item of adjacencyList) {\n        if (item.count === temp) {\n          for (let iter of item.target) {\n            if (!visited.has(iter)) {\n              visited.add(iter);\n              queue.push(iter);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return result;\n};\n\nexport default breadthFirstTraversal;\n","import adjacencyListObject from \"../types/adjacencyListObject\";\nimport visualizeObject from \"../types/visualizeObject\";\n\nconst cycleDetectionHelper = (\n  adjacencyList: adjacencyListObject[],\n  count: number,\n  visited: Set<number>,\n  recStack: Set<number>,\n  result: number[]\n): boolean => {\n  if (visited.has(count) === false) {\n    visited.add(count);\n    recStack.add(count);\n    result.push(count);\n    for (let item of adjacencyList) {\n      if (item.count === count) {\n        for (let iter of item.target) {\n          if (\n            !visited.has(iter) &&\n            cycleDetectionHelper(adjacencyList, iter, visited, recStack, result)\n          )\n            return true;\n          else if (recStack.has(iter)) return true;\n        }\n      }\n    }\n  }\n  recStack.delete(count);\n  return false;\n};\n\nconst cycleDetection = (\n  adjacencyList: adjacencyListObject[]\n): visualizeObject => {\n  let result: number[] = [];\n  let visited: Set<number> = new Set();\n  let recStack: Set<number> = new Set();\n  for (let item of adjacencyList) {\n    if (\n      cycleDetectionHelper(adjacencyList, item.count, visited, recStack, result)\n    ) {\n      return { errorDetected: true, result };\n    }\n  }\n  return { errorDetected: false, result };\n};\n\nexport default cycleDetection;\n","import adjacencyListObject from \"../types/adjacencyListObject\";\n\nconst depthFirstTraversalHelper = (\n  adjacencyList: adjacencyListObject[],\n  result: number[],\n  visisted: Set<number>,\n  count: number\n) => {\n  visisted.add(count);\n  result.push(count);\n  for (let item of adjacencyList) {\n    if (item.count === count) {\n      for (let iter of item.target) {\n        if (!visisted.has(iter)) {\n          depthFirstTraversalHelper(adjacencyList, result, visisted, iter);\n        }\n      }\n    }\n  }\n};\n\nconst depthFirstTraversal = (\n  adjacencyList: adjacencyListObject[]\n): number[] => {\n  let result: number[] = [];\n  if (adjacencyList.length > 0) {\n    let visited: Set<number> = new Set<number>();\n    depthFirstTraversalHelper(\n      adjacencyList,\n      result,\n      visited,\n      adjacencyList[0].count\n    );\n  }\n  return result;\n};\n\nexport default depthFirstTraversal;\n","import adjacencyListObject from \"../types/adjacencyListObject\";\nimport node from \"../types/node\";\n\nconst getIndex = (adjacencyList: adjacencyListObject[], count: number) => {\n  for (let item in adjacencyList) {\n    if (adjacencyList[+item].count - count === 0) {\n      return +item;\n    }\n  }\n  return -1;\n};\n\nconst dfs = (\n  adjacencyList: adjacencyListObject[],\n  nodeList: node[],\n  count: number,\n  visited: Set<number>,\n  tempVisited: Set<number>,\n  result: number[]\n): boolean => {\n  const index = getIndex(adjacencyList, count);\n  visited.add(count);\n  tempVisited.add(count);\n  if (adjacencyList[index].target.length === 0) {\n    tempVisited.clear();\n  }\n  for (let item of adjacencyList[index].target) {\n    if (tempVisited.has(item) === true) {\n      return false;\n    }\n    if (visited.has(item) === false) {\n      let value: boolean = dfs(\n        adjacencyList,\n        nodeList,\n        item,\n        visited,\n        tempVisited,\n        result\n      );\n      if (value === false) {\n        return false;\n      }\n    }\n  }\n  result.push(count);\n  return true;\n};\n\nconst topologicalSort = (\n  adjacencyList: adjacencyListObject[],\n  nodeList: node[]\n): number[] => {\n  let result: number[] = [];\n  let visited = new Set<number>();\n  for (let iter in adjacencyList) {\n    const item = adjacencyList[+iter];\n    let tempVisited = new Set<number>();\n    if (visited.has(item.count) === false) {\n      let value: boolean = dfs(\n        adjacencyList,\n        nodeList,\n        item.count,\n        visited,\n        tempVisited,\n        result\n      );\n      if (value === false) {\n        result = [];\n        return result;\n      }\n    }\n  }\n  return result;\n};\n\nexport default topologicalSort;\n","import edgeColor from \"../actions/edgeColor\";\nimport node from \"../types/node\";\nimport edge from \"../types/edge\";\nimport redrawCanvas from \"./redrawCanvas\";\n\nconst slowDrawNode = async (\n  nodeList: node[],\n  resultList: node[],\n  edgeList: edge[],\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  res: (value: boolean) => any\n) => {\n  let promises = [];\n  for (let item of resultList) {\n    promises.push(\n      new Promise((res, rej) => {\n        setTimeout(() => {\n          item.visualize = true;\n          redrawCanvas(\n            nodeList,\n            edgeList,\n            canvas,\n            context,\n            edgeColor(document)\n          );\n          res(true);\n        }, 1000 * resultList.findIndex((node) => node.count === item.count));\n      })\n    );\n  }\n  Promise.all(promises).then(() => {\n    for (let item of resultList) {\n      item.visualize = false;\n    }\n    res(true);\n  });\n};\n\nconst visualizeAlgorithm = (\n  nodeList: node[],\n  resultList: node[],\n  edgeList: edge[],\n  canvas: HTMLCanvasElement | null,\n  context: CanvasRenderingContext2D | null\n): Promise<boolean> => {\n  if (canvas && context) {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    const rect = canvas.getBoundingClientRect();\n    for (let item of nodeList) {\n      if (rect.right !== item.windowX || rect.bottom !== item.windowY) {\n        item.clientX = item.clientX * (rect.right / item.windowX);\n        item.clientY = item.clientY * (rect.bottom / item.windowY);\n        item.canvasX = item.clientX - rect.left;\n        item.canvasY = item.clientY - rect.top;\n        item.windowX = rect.right;\n        item.windowY = rect.bottom;\n      }\n    }\n    redrawCanvas(nodeList, edgeList, canvas, context, edgeColor(document));\n    return new Promise<boolean>((res) =>\n      slowDrawNode(nodeList, resultList, edgeList, canvas, context, res)\n    );\n  }\n  return new Promise<boolean>((res, rej) => {\n    rej(0);\n  });\n};\n\nexport default visualizeAlgorithm;\n","import React, { useState, useContext } from \"react\";\nimport { AdjacencyListContext } from \"../contexts/AdjacencyListContext\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport { SnackbarContext } from \"../contexts/SnackbarContext\";\nimport Algorithmdropdown from \"../components/Algorithmdropdown\";\nimport breadthFirstTraversal from \"../algorithms/breadthFirstTraversal\";\nimport cycleDetection from \"../algorithms/cycleDetection\";\nimport depthFirstTraversal from \"../algorithms/depthFirstTraversal\";\nimport topologicalSort from \"../algorithms/topologicalSort\";\nimport visualizeAlgorithm from \"../actions/visualizeAlgorithm\";\nimport adjacencyListProvider from \"../types/adjacencyListProvider\";\nimport canvasProvider from \"../types/canvasProvider\";\nimport node from \"../types/node\";\nimport snackbarProvider from \"../types/snackbarProvider\";\nimport \"../styles/Visualize.scss\";\n\nconst Visualize = () => {\n  const { nodeList, edgeList, adjacencyList } = useContext<\n    adjacencyListProvider\n  >(AdjacencyListContext);\n  const { canvas, context } = useContext<canvasProvider>(CanvasContext);\n  const { toggleSnackbar } = useContext<snackbarProvider>(SnackbarContext);\n  const [algorithm, setAlgorithm] = useState<number>(0);\n\n  const algoList = [\n    \"Topological Sort\",\n    \"Breadth First Traversal\",\n    \"Depth First Traversal\",\n    \"Graph Cycle Detection\",\n  ];\n\n  const handleVisualize = (event: React.FormEvent<HTMLDivElement>) => {\n    let errorDetected: boolean = false;\n    event.preventDefault();\n    let result: number[] = [];\n    if (algorithm === 0) {\n      result = topologicalSort(adjacencyList, nodeList);\n    } else if (algorithm === 1) {\n      result = breadthFirstTraversal(adjacencyList);\n    } else if (algorithm === 2) {\n      result = depthFirstTraversal(adjacencyList);\n    } else if (algorithm === 3) {\n      ({ errorDetected, result } = cycleDetection(adjacencyList));\n    }\n    let resultNodes: node[] = [];\n    for (let item of result) {\n      for (let item2 of nodeList) {\n        if (item2.count === item) {\n          resultNodes.push(item2);\n        }\n      }\n    }\n    console.log(edgeList);\n    visualizeAlgorithm(nodeList, resultNodes, edgeList, canvas, context).then(\n      (val) => {\n        if (val && algorithm === 3) {\n          if (errorDetected) toggleSnackbar(\"Cycle Detected\");\n          else toggleSnackbar(\"No Cycle Detected\");\n        }\n      }\n    );\n  };\n\n  return (\n    <div className=\"visualize-container\">\n      <Algorithmdropdown\n        algoList={algoList}\n        count={algorithm}\n        setAlgorithm={setAlgorithm}\n      />\n      <div className=\"visualize-button\" onClick={handleVisualize}>\n        Visualize\n      </div>\n    </div>\n  );\n};\n\nexport default Visualize;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n});\n\nvar SvgClose = function SvgClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/close.77ba6520.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext } from \"react\";\nimport { SnackbarContext } from \"../contexts/SnackbarContext\";\nimport { ReactComponent as CloseIcon } from \"../icons/close.svg\";\nimport snackbarProvider from \"../types/snackbarProvider\";\nimport \"../styles/Snackbar.scss\";\n\nconst Snackbar = () => {\n  const { open, message, toggleSnackbar } = useContext<snackbarProvider>(\n    SnackbarContext\n  );\n  return (\n    <div>\n      {open ? (\n        <div className=\"snackbar-container\">\n          <p className=\"snackbar-text\">{message}</p>\n          <CloseIcon\n            onClick={() => toggleSnackbar()}\n            className=\"snackbar-close-icon\"\n          />\n        </div>\n      ) : (\n        <React.Fragment />\n      )}\n    </div>\n  );\n};\n\nexport default Snackbar;\n","import React from \"react\";\nimport { AdjacencyListContextProvider } from \"./contexts/AdjacencyListContext\";\nimport { CanvasContextProvider } from \"./contexts/CanvasContext\";\nimport { SnackbarContextProvider } from \"./contexts/SnackbarContext\";\nimport Header from \"./components/Header\";\nimport Canvas from \"./components/Canvas\";\nimport Visualize from \"./components/Visualize\";\nimport Snackbar from \"./components/Snackbar\";\nimport \"./styles/Variables.scss\";\nimport \"./styles/App.scss\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <AdjacencyListContextProvider>\n        <CanvasContextProvider>\n          <SnackbarContextProvider>\n            <Header />\n            <div className=\"container\">\n              <Canvas />\n              <Visualize />\n              <Snackbar />\n            </div>\n          </SnackbarContextProvider>\n        </CanvasContextProvider>\n      </AdjacencyListContextProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}